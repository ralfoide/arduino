#!/usr/bin/python

from Adafruit_PWM_Servo_Driver import PWM
from Adafruit_I2C import Adafruit_I2C
import time
import sys
import getopt
regaddr=0x10
statefile = ""
address= 0

for address in range(1, 17):

   # ===========================================================================
   statefile = "/usr/local/etc/.servo" + str(address) + ".state"
   f = open(statefile, 'r')
   state = f.read()
   #print state,
   #print "statefile %s says %s" % (statefile, state)
   
   # ===========================================================================
   
   # Initialise the PWM device using the default address
   pwm = PWM(0x40, debug=False)
   i2c=Adafruit_I2C (0x40, 1)
   pwm.setPWMFreq(60)                        # Set frequency to 60 Hz
   
   #regaddr = motor + 8
   regaddr = (int (address) * 4) + 4 
   motor = int(address) - 1
   
   #print "motor = %i" %motor
   #print "regaddr = %i" %regaddr
   
   register = i2c.readU16Rev(regaddr)
   
   #print "register = 0x%x <%i> " %( register,register)

   #if register <  4000:
    #sys.exit(0)
   
   # check if controller was reset and reconfig
   #print "res = %i" %register
   #print "state = %i" %int(state)
   #print "servomax = %i" %servoMax
   
   if register < 8000:
    #print "reset detected: state = %i register = %i " %(int(state),register)
    #print "setting servo controller register %i to %i" %(motor, int(state))
    pwm.setPWM(motor, 0, int(state))
   #
   #if register < 4000:
      #print "servo state ok - state = %s" %register
      #time.sleep (4)
   #pwm.setPWM(motor , 0, register)
   
   
   #pwm.setPWM(motor , 0, servoMin)
   #register = i2c.readU16Rev(regaddr)
   #print "u16  %d" %register

     #print "----------------------------------"


